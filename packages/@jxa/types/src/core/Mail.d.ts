
export namespace Mail {
    // Records

    // Function options

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface DuplicateOptionalParameter {
      /**
       * The location for the new copy or copies.
       */
      to?: any;
      /**
       * Properties to set in the new copy or copies right away.
       */
      withProperties?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface MoveOptionalParameter {
      /**
       * The new location for the object(s).
       */
      to: any;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface CheckForNewMailOptionalParameter {
      /**
       * Specify the account that you wish to check for mail
       */
      for?: any;
    }



    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ForwardOptionalParameter {
      /**
       * Whether the window for the forwarded message is shown. Default is to not show the window.
       */
      openingWindow?: boolean;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ImportMailMailboxOptionalParameter {
      /**
       * the mailbox or folder of mailboxes to import
       */
      at: any;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface PerformMailActionWithMessagesOptionalParameter {
      /**
       * If the script is being executed by the user selecting an item in the scripts menu, this argument will specify the mailboxes that are currently selected. Otherwise it will not be specified.
       */
      inMailboxes?: any;
      /**
       * If the script is being executed by a rule action, this argument will be the rule being invoked. Otherwise it will not be specified.
       */
      forRule?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface RedirectOptionalParameter {
      /**
       * Whether the window for the redirected message is shown. Default is to not show the window.
       */
      openingWindow?: boolean;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ReplyOptionalParameter {
      /**
       * Whether the window for the reply message is shown. Default is to not show the window.
       */
      openingWindow?: boolean;
      /**
       * Whether to reply to all recipients. Default is to reply to the sender only.
       */
      replyToAll?: boolean;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface SynchronizeOptionalParameter {
      /**
       * The account to synchronize
       */
      with: any;
    }

}
export interface Mail {
    // Functions

     /**
      * Delete an object.
      * @param directParameter The object(s) to delete.
      * 
      */
     delete(directParameter: any, ): void

     /**
      * Copy an object.
      * @param directParameter The object(s) to copy.
      * @param option
      * 
      */
     duplicate(directParameter: any, option?: Mail.DuplicateOptionalParameter): void

     /**
      * Move an object to a new location.
      * @param directParameter The object(s) to move.
      * @param option
      * 
      */
     move(directParameter: any, option?: Mail.MoveOptionalParameter): void

     /**
      * Does nothing at all (deprecated)
      * @param directParameter the message to bounce
      * 
      */
     bounce(directParameter: any, ): void

     /**
      * Triggers a check for email.

      * @param option
      * 
      */
     checkForNewMail(option?: Mail.CheckForNewMailOptionalParameter): void

     /**
      * Command to get the full name out of a fully specified email address. E.g. Calling this with "John Doe <jdoe@example.com>" as the direct object would return "John Doe"
      * @param directParameter fully formatted email address
      * @return the full name
      */
     extractNameFrom(directParameter: string, ): string

     /**
      * Command to get just the email address of a fully specified email address. E.g. Calling this with "John Doe <jdoe@example.com>" as the direct object would return "jdoe@example.com"
      * @param directParameter fully formatted email address
      * @return the email address
      */
     extractAddressFrom(directParameter: string, ): string

     /**
      * Creates a forwarded message.
      * @param directParameter the message to forward
      * @param option
      * @return the message to be forwarded
      */
     forward(directParameter: any, option?: Mail.ForwardOptionalParameter): any

     /**
      * Opens a mailto URL.
      * @param directParameter the mailto URL
      * 
      */
     getURL(directParameter: string, ): void

     /**
      * Imports a mailbox created by Mail.

      * @param option
      * 
      */
     importMailMailbox(option?: Mail.ImportMailMailboxOptionalParameter): void

     /**
      * Opens a mailto URL.
      * @param directParameter the mailto URL
      * 
      */
     mailto(directParameter: string, ): void

     /**
      * Script handler invoked by rules and menus that execute AppleScripts. The direct parameter of this handler is a list of messages being acted upon.
      * @param directParameter the message being acted upon
      * @param option
      * 
      */
     performMailActionWithMessages(directParameter: {}, option?: Mail.PerformMailActionWithMessagesOptionalParameter): void

     /**
      * Creates a redirected message.
      * @param directParameter the message to redirect
      * @param option
      * @return the redirected message
      */
     redirect(directParameter: any, option?: Mail.RedirectOptionalParameter): any

     /**
      * Creates a reply message.
      * @param directParameter the message to reply to
      * @param option
      * @return the reply message
      */
     reply(directParameter: any, option?: Mail.ReplyOptionalParameter): any

     /**
      * Sends a message.
      * @param directParameter the message to send
      * @return true if sending was successful, false if not
      */
     send(directParameter: any, ): boolean

     /**
      * Command to trigger synchronizing of an IMAP account with the server.

      * @param option
      * 
      */
     synchronize(option?: Mail.SynchronizeOptionalParameter): void
}
