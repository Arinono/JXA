
export namespace Pages {
    // Records
    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ExportOptions {
      /**
       * EPUB title
       */
      title: {
        [k: string]: any;
      };
      /**
       * EPUB author
       */
      author: {
        [k: string]: any;
      };
      /**
       * EPUB genre
       */
      genre: {
        [k: string]: any;
      };
      /**
       * EPUB language (Language name or ISO language code)
       */
      language: {
        [k: string]: any;
      };
      /**
       * EPUB publisher
       */
      publisher: {
        [k: string]: any;
      };
      /**
       * EPUB first page is cover
       */
      cover: boolean;
      /**
       * EPUB fixed layout
       */
      fixedLayout: boolean;
      /**
       * password
       */
      password: {
        [k: string]: any;
      };
      /**
       * password hint
       */
      passwordHint: {
        [k: string]: any;
      };
      /**
       * image quality
       */
      imageQuality: {
        [k: string]: any;
      };
    }

    // Function options
    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface SetOptionalParameter {
      /**
       * The new value.
       */
      to: any;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface MakeOptionalParameter {
      /**
       * The class of the new object.
       */
      new: any;
      /**
       * The location at which to insert the object.
       */
      at?: any;
      /**
       * The initial contents of the object.
       */
      withData?: any;
      /**
       * The initial values for properties of the object.
       */
      withProperties?: any;
    }



    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface SortOptionalParameter {
      /**
       * The column to sort by.
       */
      by: any;
      direction?: any;
      /**
       * Limit the sort to the specified rows.
       */
      inRows?: any;
    }


    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface MakeOptionalParameter1 {
      /**
       * The class of the new object.
       */
      new: any;
      /**
       * The location at which to insert the object.
       */
      at?: any;
      /**
       * The initial contents of the object.
       */
      withData?: any;
      /**
       * The initial values for properties of the object.
       */
      withProperties?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ExportOptionalParameter {
      /**
       * the destination file
       */
      to: any;
      /**
       * The format to use.
       */
      as: any;
      /**
       * Optional export settings.
       */
      withProperties?: any;
    }

}
export interface Pages {
    // Functions

     /**
      * Sets the value of the specified object(s).
      * @param directParameter undefined
      * @param option
      * 
      */
     set(directParameter: any, option?: Pages.SetOptionalParameter): void

     /**
      * Delete an object.
      * @param directParameter undefined
      * 
      */
     delete(directParameter: any, ): void

     /**
      * Create a new object.

      * @param option
      * @return The new object.
      */
     make(option?: Pages.MakeOptionalParameter): any

     /**
      * Clear the contents of a specified range of cells, including formatting and style.
      * @param directParameter undefined
      * 
      */
     clear(directParameter: any, ): void

     /**
      * Merge a specified range of cells.
      * @param directParameter undefined
      * 
      */
     merge(directParameter: any, ): void

     /**
      * Sort the rows of the table.
      * @param directParameter undefined
      * @param option
      * 
      */
     sort(directParameter: any, option?: Pages.SortOptionalParameter): void

     /**
      * Unmerge all merged cells in a specified range.
      * @param directParameter undefined
      * 
      */
     unmerge(directParameter: any, ): void

     /**
      * Create a new object.

      * @param option
      * @return The new object.
      */
     make(option?: Pages.MakeOptionalParameter1): any

     /**
      * Export a document to another file
      * @param directParameter The document to export
      * @param option
      * 
      */
     export(directParameter: any, option?: Pages.ExportOptionalParameter): void
}
