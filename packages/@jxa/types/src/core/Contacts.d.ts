
export namespace Contacts {
    // Records

    // Function options
    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface MakeOptionalParameter {
      /**
       * The class of the new object.
       */
      new: any;
      /**
       * The location at which to insert the object.
       */
      at?: any;
      /**
       * The initial contents of the object.
       */
      withData?: any;
      /**
       * The initial values for properties of the object.
       */
      withProperties?: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface AddOptionalParameter {
      /**
       * where to add this child to.
       */
      to: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface RemoveOptionalParameter {
      /**
       * where to remove this child from.
       */
      from: any;
    }



    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ActionTitleOptionalParameter {
      /**
       * property that that was returned from the "action property" handler.
       */
      with: any;
      /**
       * Currently selected person.
       */
      for: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface PerformActionOptionalParameter {
      /**
       * property that that was returned from the "action property" handler.
       */
      with: any;
      /**
       * Currently selected person.
       */
      for: any;
    }

    /**
     * This file was automatically generated by json-schema-to-typescript.
     * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
     * and run json-schema-to-typescript to regenerate this file.
     */

    export interface ShouldEnableActionOptionalParameter {
      /**
       * property that that was returned from the "action property" handler.
       */
      with: any;
      /**
       * Currently selected person.
       */
      for: any;
    }

}
export interface Contacts {
    // Functions

     /**
      * Create a new object.

      * @param option
      * @return The new object.
      */
     make(option?: Contacts.MakeOptionalParameter): any

     /**
      * Add a child object.
      * @param directParameter object to add.
      * @param option
      * @return undefined
      */
     add(directParameter: any, option?: Contacts.AddOptionalParameter): any

     /**
      * Remove a child object.
      * @param directParameter object to remove.
      * @param option
      * @return undefined
      */
     remove(directParameter: any, option?: Contacts.RemoveOptionalParameter): any

     /**
      * Save all Address Book changes. Also see the unsaved property for the application class.

      * @return undefined
      */
     save(): any

     /**
      * RollOver - Which property this roll over is associated with (Properties can be one of maiden name, phone, email, url, birth date, custom date, related name, aim, icq, jabber, msn, yahoo, address.)

      * @return undefined
      */
     actionProperty(): string

     /**
      * RollOver - Returns the title that will be placed in the menu for this roll over

      * @param option
      * @return undefined
      */
     actionTitle(option?: Contacts.ActionTitleOptionalParameter): string

     /**
      * RollOver - Performs the action on the given person and value

      * @param option
      * @return undefined
      */
     performAction(option?: Contacts.PerformActionOptionalParameter): boolean

     /**
      * RollOver - Determines if the rollover action should be enabled for the given person and value

      * @param option
      * @return undefined
      */
     shouldEnableAction(option?: Contacts.ShouldEnableActionOptionalParameter): boolean
}
